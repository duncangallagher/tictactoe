{"ast":null,"code":"var _jsxFileName = \"/Users/duncan/Documents/react-tutorials/tic-tac-toe/tic-tac-toe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n      turnCounter: 0,\n      winner: null,\n      winningSquares: Array(3).fill(null)\n    };\n  }\n\n  handleClick(i) {\n    this.state.turnCounter++;\n    const squares = this.state.squares.slice(); // return early if the game is over or same square is clicked\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    } // if 9 turns are reached and no winner, declare draw\n\n\n    if (this.state.turnCounter == 9 && !calculateWinner(squares)) {\n      this.state.winner = 'none';\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    let title = 'Tic-Tac-Toe';\n\n    if (winner) {\n      status = winner + ' wins!';\n      this.state.winner = winner;\n      this.state.winningSquares = [...winner];\n    } else if (this.state.winner == 'none') {\n      status = 'Draw!';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 102,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      const winning_squares = lines[i];\n      return winning_squares;\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/duncan/Documents/react-tutorials/tic-tac-toe/tic-tac-toe/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","constructor","state","squares","Array","fill","xIsNext","turnCounter","winner","winningSquares","handleClick","i","slice","calculateWinner","setState","renderSquare","render","status","title","Game","document","getElementById","lines","length","a","b","c","winning_squares"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            xIsNext: true,\n            turnCounter: 0,\n            winner: null,\n            winningSquares: Array(3).fill(null),\n        };\n    }\n    handleClick(i) {\n        this.state.turnCounter++;\n        const squares = this.state.squares.slice();\n        // return early if the game is over or same square is clicked\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        // if 9 turns are reached and no winner, declare draw\n        if (this.state.turnCounter == 9 && !(calculateWinner(squares))) {\n            this.state.winner = 'none';\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            squares: squares,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n    renderSquare(i) {\n        return (\n            <Square\n                value={this.state.squares[i]}\n                onClick={() => this.handleClick(i)}\n            />\n        );\n    }\n    render() {\n        const winner = calculateWinner(this.state.squares);\n        let status;\n        let title = 'Tic-Tac-Toe';\n        if (winner) {\n            status = winner + ' wins!';\n            this.state.winner = winner;\n            this.state.winningSquares = [...winner];\n        } else if (this.state.winner == 'none') {\n            status = 'Draw!';\n        }\n        else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n        return (\n            <div>\n             <div className=\"title\">{title}</div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n                <div className=\"status\">{status}</div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board />\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            const winning_squares = lines[i];\n            return winning_squares;\n        }\n    }\n    return null;\n}"]},"metadata":{},"sourceType":"module"}