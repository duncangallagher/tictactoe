{"ast":null,"code":"var _jsxFileName = \"/Users/duncan/Documents/react-tutorials/tic-tac-toe/tic-tac-toe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: props.className,\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Square;\n\nfunction Reset(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: props.className,\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Reset;\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n      turnCounter: 0,\n      winner: null,\n      winningSquares: Array(3).fill(null)\n    };\n  }\n\n  handleClick(i) {\n    this.state.turnCounter++;\n    const squares = this.state.squares.slice(); // return early if the game is over or same square is clicked\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    } // if 9 turns are reached and no winner, declare draw\n\n\n    if (this.state.turnCounter == 9 && !calculateWinner(squares)) {\n      this.state.winner = 'none';\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    let class_name = \"square\";\n\n    if (this.state.winningSquares.includes(i)) {\n      class_name += ' winner';\n    }\n\n    return /*#__PURE__*/_jsxDEV(Square, {\n      className: class_name,\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleReset() {\n    this.state.squares = Array(9).fill(null);\n    this.state.xIsNext = true;\n    this.state.turnCounter = 0;\n    this.state.winner = null;\n    this.state.winningSquares = Array(3).fill(null);\n  }\n\n  renderReset() {\n    let class_name = \"reset-button\";\n    let reset_text = \"Reset\";\n\n    if (this.state.winner) {\n      return /*#__PURE__*/_jsxDEV(Reset, {\n        className: class_name,\n        value: reset_text,\n        onClick: () => this.handleReset()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    const winning_squares = calculateWinner(this.state.squares);\n    let title = 'Tic-Tac-Toe';\n    let status;\n\n    if (winning_squares) {\n      let winner = this.state.squares[winning_squares[0]];\n      status = winner + ' wins!';\n      this.state.winner = winner;\n      this.state.winningSquares = winning_squares;\n    } else if (this.state.winner == 'none') {\n      status = 'Draw!';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reset\",\n        children: this.renderReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 137,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      const winning_squares = lines[i];\n      return winning_squares;\n    }\n  }\n\n  return null;\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Reset\");","map":{"version":3,"sources":["/Users/duncan/Documents/react-tutorials/tic-tac-toe/tic-tac-toe/src/index.js"],"names":["React","ReactDOM","Square","props","className","onClick","value","Reset","Board","Component","constructor","state","squares","Array","fill","xIsNext","turnCounter","winner","winningSquares","handleClick","i","slice","calculateWinner","setState","renderSquare","class_name","includes","handleReset","renderReset","reset_text","render","winning_squares","title","status","Game","document","getElementById","lines","length","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n        <button className={props.className} onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nfunction Reset(props) {\n    return (\n        <button className={props.className} onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            xIsNext: true,\n            turnCounter: 0,\n            winner: null,\n            winningSquares: Array(3).fill(null),\n        };\n    }\n    handleClick(i) {\n        this.state.turnCounter++;\n        const squares = this.state.squares.slice();\n        // return early if the game is over or same square is clicked\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        // if 9 turns are reached and no winner, declare draw\n        if (this.state.turnCounter == 9 && !(calculateWinner(squares))) {\n            this.state.winner = 'none';\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            squares: squares,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n    renderSquare(i) {\n        let class_name = \"square\";\n        if ((this.state.winningSquares).includes(i)) {\n            class_name += ' winner';\n        }\n        return (\n            <Square\n                className={class_name}\n                value={this.state.squares[i]}\n                onClick={() => this.handleClick(i)}\n            />\n        );\n    }\n    handleReset() {\n      this.state.squares = Array(9).fill(null);\n      this.state.xIsNext = true;\n      this.state.turnCounter = 0;\n      this.state.winner = null;\n      this.state.winningSquares = Array(3).fill(null);\n    }\n    renderReset() {\n        let class_name = \"reset-button\";\n        let reset_text = \"Reset\"\n        if (this.state.winner) {\n            return (\n                <Reset\n                    className={class_name}\n                    value={reset_text}\n                    onClick={() => this.handleReset()}\n                />\n            );\n        }\n    }\n    render() {\n        const winning_squares = calculateWinner(this.state.squares);\n        let title = 'Tic-Tac-Toe';\n        let status;\n        if (winning_squares) {\n            let winner = this.state.squares[winning_squares[0]];\n            status = winner + ' wins!';\n            this.state.winner = winner;\n            this.state.winningSquares = winning_squares;\n        } else if (this.state.winner == 'none') {\n            status = 'Draw!';\n        }\n        else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n        return (\n            <div>\n                <div className=\"title\">{title}</div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n                <div className=\"status\">{status}</div>\n                <div className=\"reset\">{this.renderReset}</div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board />\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            const winning_squares = lines[i];\n            return winning_squares;\n        }\n    }\n    return null;\n}"]},"metadata":{},"sourceType":"module"}